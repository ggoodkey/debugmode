var APP = APP || {}; (function () { "use strict"; function v() { f === !0 ? (APP.debug("Debug Mode turned off"), APP.setDebugMode(!1)) : (APP.setDebugMode(!0), APP.debug("Debug Mode turned on")) } function y() { w(); n.className = /debugRight/.test(n.className) ? "" : "debugRight" } function p(n) { var i = n.getMinutes(), r = n.getSeconds(), t = n.getMilliseconds(); return c++ , l = n.getTime(), i = i < 10 ? "0" + i : i, r = r < 10 ? "0" + r : r, t = t < 10 ? "0" + t : t, t = t < 100 ? "0" + t : t, i + ":" + r + ":" + t } function s(n, t, i, e) { function o(n, t, i) { var r = '<span class="debug-'; return r += n, r += '"', i && (r += ' title="', r += i, r += '"'), r += ">", r += t, r + "<\/span>" } function l(n) { var t = ""; return n instanceof Function ? t = o("function", "function() {...}") : typeof n == "number" ? t = n > 15e11 && n < 2e12 ? o("number", n, new Date(n)) : o("number", n) : n === null ? t = o("error", "null") : typeof n == "undefined" ? t = o("error", "undefined") : typeof n == "string" ? (n === "" ? t = o("error", 'Empty string: ("")') : n === " " ? t = o("error", 'A space: (" ")') : (n = n.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;"), n = n.replace(/\r\n|\r|\n/g, o("text", "NL") + "<br />"), t = o("string", n)), t.length > 5007 && (t = t.slice(0, 5e3) + "<\/span>" + o("text", "...etc. etc. " + parseInt(t.length / 5e3) + " times"))) : t = typeof n == "boolean" ? o("boolean", n) : typeof n == "object" ? n instanceof Date ? o("date", n) : n instanceof Array ? a(n) : o("text", "{ " + v(n) + " }") : o("error", "???: " + n), n = null, t } function a(n) { var i = [], r = n.length, t, u; if (r === 0) return o("array", "[ " + o("error", "Empty array") + " ]"); for (t = 0; t < r; t++)i[t] = l(n[t]); return u = o("array", "[ " + i.join(", ") + " ]"), i = null, n = null, u } function v(n) { var i = [], t = 0, r; for (var u in n) if (r = n[u], i[t] = u + ": " + l(r), t++ , t > 50) { i[t] = "continued...."; break } return t = null, n = null, u = null, r = null, i.join(",<br />") } var s, c; (f === !0 || h === !0 && console && console.log) && (n = n instanceof Array ? a(n) : n instanceof Function ? o("function", "function() {...}") : n instanceof Date ? o("date", n) : typeof n == "object" ? o("object", "{ " + v(n) + " }") : l(n)); f === !0 && (/debugmodeOn/.test(u.className) || (u.className = u.className + " debugmodeOn"), s = "<span class='debug-timestamp'>", s += e, s += "    <\/span><br />&nbsp;&nbsp;", s += t ? i !== undefined || /error/i.test(t) ? o("error", t + " " + n) : t + " " + n : n, s += "<br />", s += r.innerHTML, r.innerHTML = s, s = null); h === !0 && console && console.log && (c = e, t && (c += "   " + t + ":\n         "), c += "   ", c += n, console.log(c.replace(/<\/?span[^>]*>/g, "").replace(/<br \/>/g, "\n            ")), c = null); n = null; t = null } function w() { function i(n) { for (n = String(n); /\s\s/g.test(n);)n = n.replace(/\s\s/g, " "); return n === " " ? "" : n.replace(/^\s+|\s+$/gm, "") } var t = window.innerWidth !== null ? window.innerWidth : document.body !== null && document.body.clientWidth !== null ? document.body.clientWidth : window.screen !== null ? window.screen.availWidth : 0, n = "debugShowLarge "; t <= 640 && (n = "debugShowSmall "); console.log(t, n); console.log(window.innerWidth, "window.innerWidth"); console.log(window.screen, "window.screen"); console.log(document.body.clientWidth, "document.body.clientWidth"); u.className = i(n + u.className.replace(/debugShowLarge|debugShowSmall/g, "")) } function b() { var i = document.createElement("style"), u = document.createElement("span"); u["aria-hidden"] = !0; u.appendChild(document.createTextNode("тип")); t = document.createElement("button"); t.id = "hideDebug"; t.type = "button"; t.class = "close"; t["aria-label"] = "Close debug window"; t.appendChild(u); r = document.createElement("div"); r.id = "debugMsg"; n = document.createElement("div"); n.id = "debug"; n.appendChild(t); n.appendChild(r); w(); i.type = "text/css"; i.innerText = "#debug {display: none;} #hideDebug {padding: 6px 10px;color: red;position: fixed;} html.debugShowLarge #hideDebug {left: 25%;right: auto;right: initial;} html.debugShowLarge #debug.debugRight #hideDebug {left: auto;left: initial;right: 22px;} html.debugShowSmall #hideDebug {left: auto;left: initial;right: 12px;} html.debugmodeOn #debug {color: #eee;background-color: #111;background-color: rgba(0, 0, 0, 0.7);text-shadow: 0 0 2px #000;font-family: Consolas, Courier New, Courier, monospace;position: absolute;top: 0;left: 0;right: auto;right: initial;width: 30%;max-width: 400px;height: 100%;-ms-word-wrap: break-word;word-wrap: break-word;overflow: auto;visibility: visible;display: block;z-index: 1099;} html.debugmodeOn #debug.debugRight {left: auto;left: initial;right: 0;} html.debugShowSmall #debug {position: fixed;width: 100%;max-width: 100%;height: 45%;top: auto;top: initial;bottom: 0;} html.debugShowSmall #debug.debugRight {top: 0;bottom: auto;bottom: initial;} .debug-object {color: cyan;} .debug-function {color: magenta;}.debug-error {color: red;}.debug-string {color: lightblue;}.debug-boolean {color: lightgreen;}.debug-date {color: pink;}.debug-number {color: yellow;}.debug-text {color: white;}.debug-array {color: orange;}.debug-timestamp {color: #CCC;font-size: 0.75em;}"; document.head.appendChild(i); window.document.body.insertBefore(n, window.document.body.firstChild); t.addEventListener("click", v); n.addEventListener("click", y); a = !0 } function k() { t.removeEventListener("click", v); n.removeEventListener("click", y); window.document.body.removeChild(n); u.className = u.className.replace(/debugmodeOn/g, "") } var c = 0, l = (new Date).getTime(), e = !1, f = !1, h = !1, o = [], i = 0, a = !1, t, n, r, u = document.getElementsByTagName("html")[0]; APP.setDebugMode = function (n) { var t = n; if (n === !0 || /y|true/g.test(t)) { for (a || b(), n = !0; i;)i-- , s(o[i]); o = [] } else n === !1 || /n|f/g.test(t) ? (k(), a = !1, n = !1) : (f = !0, APP.debug(span("error", "Error: Cannot set DEBUGMODE to " + n))); return f = n, n }; APP.setDebugToConsole = function (n) { var t = n; if (n === !0 || /y|true/g.test(t)) { for (n = !0; i;)i-- , s(o[i]); o = [] } else n === !1 || /n|f/g.test(t) ? n = !1 : (h = !0, APP.debug(span("error", "Error: Cannot set DEBUGTOCONSOLE to " + n))); return h = n, n }; APP.CacheMsg = function (n, t, r) { f === !0 ? s(n, t) : (o[i] = [p(new Date), t, n, r], i++) }; APP.debug = function (n, t, i) { var u = new Date, f; e === !0 && u.getTime() - l > 5e3 && (c = 0, e = !1); e === !1 && c > 250 && u.getTime() < l + 1e3 && (f = "<br />--TOO MANY MESSAGES LOGGED--<br /><br />", f += r.innerHTML, r.innerHTML = f, f = null, e = !0); e === !1 && s(n, t, i, p(u)); u = null } })();